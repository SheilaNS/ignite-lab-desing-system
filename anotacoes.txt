3 aulas práticas disponíveis por dia e acessíveis até o dia 14/10 às 23h59.

AULA 01 - chave: figma
desing system: é uma padronização de desing, desde efeitos visuais até o código back-end.
ele tras agilidade para o desenvolvimento de interfaces e aplicações.

Aplicações que ajudam a escolher cores: radix colors e tailwind css colors

Atalhos úteis:
A: frames
T: text
R: retângulo
K + botão esquerdo do mouse: aumenta ou dimonui um icone mantendo a espessura da borda
1 click + Alt: mostra a distância entre os elementos + as setas direcionais da vertical, alteramos as unidades dessa distância ou Shift para alterar em dezenas
Ctrl + g: agrupa os itens selecionados
Ctrl + D: duplico o elemento selecionado


AULA 02 - chave: react

extensões VSCode necessárias: Tailwind CSS IntelliSense, PostCSS Language Support e MDX

criando um projeto pelo vitejs

dentro da pasta do projeto e pelo terminal: npm create vite@latest

Need to install the following packages:
  create-vite@latest
Ok to proceed? (y) y
✔ Project name: … react-desing-system
✔ Select a framework: › React
✔ Select a variant: › TypeScript

Scaffolding project in /home/sheila/rocketseat/ignite-lab/react-desing-system...

Done. Now run:

  cd react-desing-system
  npm install
  npm run dev

instalar os pacotes necessários como dev-dependences
npm install -D tailwindcss postcss autoprefixer

tailwindcss
postcss: bundler para css, ele automatiza tarefas dentro do css, lendo os arquivos e criando os arquivos css necessários para estilizar a nossa página
autoprefixer: uma biblioteca que adiciona prefixos para algumas funcionalidades do css que só funcionam em alguns browers em específicos

npx tailwindcss init -p

cria os seguintes arquivos: 
Created Tailwind CSS config file: tailwind.config.cjs
Created PostCSS config file: postcss.config.cjs

no arquivo do tailwind, precisamos passar aonde estão os arquivos de conteúdo da nossa aplicação, onde estão os arquivos de classes do tailwind.
Então na chave content, passar o caminho de onde estará nossos arquivos.

Historybook é uma ferramenta que permite visualizarmos nossos componentes funcionando de uma forma isolada

npx sb init --builder @storybook/builder-vite --use-npm

╭─────────────────────────────────────────────────────────────────────────────────╮│                                                                                 ││   We've detected you are running npm 8.3.1                                      ││   which has peer dependency semantics which Storybook is incompatible with.     ││                                                                                 ││   In order to work with Storybook's package structure, you'll need to run       ││   `npm` with the                                                                ││   `--legacy-peer-deps=true` flag. We can generate an `.npmrc` which will do     ││   that automatically.                                                           ││                                                                                 ││   More info: https://github.com/storybookjs/storybook/issues/18298              ││                                                                                 │╰─────────────────────────────────────────────────────────────────────────────────╯
✔ Do you want to run the 'npm7' migration on your project? … no

para criar um thema dark, basta criar um arquivo chamado manager.js na parta de .storybook e colocar o seguinte código: 
import { addons } from '@storybook/addons';
import { themes } from '@storybook/theming';

addons.setConfig({
  theme: themes.dark,
})

depois ir no preview.cjs e adicionar a seguinte chave com o import do themes(import { themes } from '@storybook/theming';
): 
docs: {
    theme: themes.dark,
  },

deletar a pasta stories

importar(criar) os tokens do figma no tailwind

clsx npm: permite aplicar classes no tailwid de uma maneira condicional

npm install --save clsx
npm install @radix-ui/react-slot

pattern do react: pattern de composição, quando trabalhamos com componentes, eles serão um conjunto de componentes

npm i phosphor-react
npm install @radix-ui/react-checkbox

AULA 03 - chave:

storybook deployer: npm i @storybook/storybook-deployer --save-dev